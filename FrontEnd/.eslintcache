[{"E:\\isc quang trung\\onJob\\restaurent\\src\\index.js":"1","E:\\isc quang trung\\onJob\\restaurent\\src\\App.js":"2","E:\\isc quang trung\\onJob\\restaurent\\src\\reportWebVitals.js":"3","E:\\isc quang trung\\onJob\\restaurent\\src\\pages\\login.jsx":"4","E:\\isc quang trung\\onJob\\restaurent\\src\\controll\\input.jsx":"5","E:\\isc quang trung\\onJob\\restaurent\\src\\containers\\defauLayout.jsx":"6","E:\\isc quang trung\\onJob\\restaurent\\src\\routes.js":"7","E:\\isc quang trung\\onJob\\restaurent\\src\\containers\\header.jsx":"8","E:\\isc quang trung\\onJob\\restaurent\\src\\pages\\home.jsx":"9","E:\\isc quang trung\\onJob\\restaurent\\src\\containers\\leftSite.jsx":"10","E:\\isc quang trung\\onJob\\restaurent\\src\\containers\\footer.jsx":"11","E:\\isc quang trung\\onJob\\restaurent\\src\\pages\\dish.jsx":"12","E:\\isc quang trung\\onJob\\restaurent\\src\\pages\\dishCategory.jsx":"13","E:\\isc quang trung\\onJob\\restaurent\\src\\pages\\orderDetails.jsx":"14","E:\\isc quang trung\\onJob\\restaurent\\src\\pages\\customer.jsx":"15","E:\\isc quang trung\\onJob\\restaurent\\src\\pages\\order.jsx":"16","E:\\isc quang trung\\onJob\\restaurent\\src\\pages\\table.jsx":"17","E:\\isc quang trung\\onJob\\restaurent\\src\\pages\\staff.jsx":"18","E:\\isc quang trung\\onJob\\restaurent\\src\\pages\\ingredient.jsx":"19","E:\\isc quang trung\\onJob\\restaurent\\src\\pages\\ingredientCategory.jsx":"20","E:\\isc quang trung\\onJob\\restaurent\\src\\pages\\area.jsx":"21","E:\\isc quang trung\\onJob\\restaurent\\src\\pages\\revenue.jsx":"22"},{"size":904,"mtime":1608866945544,"results":"23","hashOfConfig":"24"},{"size":890,"mtime":1608535505784,"results":"25","hashOfConfig":"24"},{"size":362,"mtime":499162500000,"results":"26","hashOfConfig":"24"},{"size":2417,"mtime":1608374491797,"results":"27","hashOfConfig":"24"},{"size":1286,"mtime":1608532959022,"results":"28","hashOfConfig":"24"},{"size":1681,"mtime":1608466664477,"results":"29","hashOfConfig":"24"},{"size":1588,"mtime":1608865110823,"results":"30","hashOfConfig":"24"},{"size":13874,"mtime":1608470555292,"results":"31","hashOfConfig":"24"},{"size":278,"mtime":1608471594666,"results":"32","hashOfConfig":"24"},{"size":5778,"mtime":1608868102490,"results":"33","hashOfConfig":"24"},{"size":488,"mtime":1608466498017,"results":"34","hashOfConfig":"24"},{"size":7897,"mtime":1608865462206,"results":"35","hashOfConfig":"24"},{"size":5515,"mtime":1608865458554,"results":"36","hashOfConfig":"24"},{"size":6770,"mtime":1608865434694,"results":"37","hashOfConfig":"24"},{"size":7499,"mtime":1608865466642,"results":"38","hashOfConfig":"24"},{"size":12051,"mtime":1608867039071,"results":"39","hashOfConfig":"24"},{"size":6743,"mtime":1608865401543,"results":"40","hashOfConfig":"24"},{"size":9221,"mtime":1608865424253,"results":"41","hashOfConfig":"24"},{"size":7393,"mtime":1608865453655,"results":"42","hashOfConfig":"24"},{"size":5452,"mtime":1608865451036,"results":"43","hashOfConfig":"24"},{"size":5267,"mtime":1608865471324,"results":"44","hashOfConfig":"24"},{"size":286,"mtime":1608865423399,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"49"},"hvbdv1",{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"49"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"49"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"49"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"49"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"49"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"49"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"49"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"49"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"49"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"49"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"49"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"49"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"49"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},"E:\\isc quang trung\\onJob\\restaurent\\src\\index.js",["106","107"],"import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nimport \"@fortawesome/fontawesome-free/css/all.css\";\nimport $ from \"jquery\";\nimport Popper from \"popper.js\";\nimport \"bootstrap/dist/js/bootstrap.bundle.min\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"./containers/sa.css\";\nimport \"bootstrap/dist/css/bootstrap.css\";\n\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>,\n//   document.getElementById(\"root\")\n// );\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["108","109"],"E:\\isc quang trung\\onJob\\restaurent\\src\\App.js",["110"],"import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport DefauLayout from \"./containers/defauLayout\";\nimport { Switch, Route } from \"react-router-dom\";\nimport Login from \"./pages/login\";\n\nfunction App() {\n  return (\n    // <div className=\"App\">\n    //   <header className=\"App-header\">\n    //     <img src={logo} className=\"App-logo\" alt=\"logo\" />\n    //     <p>\n    //       Edit <code>src/App.js</code> and save to reload.\n    //     </p>\n    //     <a\n    //       className=\"App-link\"\n    //       href=\"https://reactjs.org\"\n    //       target=\"_blank\"\n    //       rel=\"noopener noreferrer\"\n    //     >\n    //       Learn React\n    //     </a>\n    //   </header>\n    // </div>\n    <Switch>\n      <Route exact path=\"/login\" name=\"Login page\" component={Login}></Route>\n      <Route path=\"/\" name=\"Home page\" component={DefauLayout}></Route>\n    </Switch>\n  );\n}\n\nexport default App;\n","E:\\isc quang trung\\onJob\\restaurent\\src\\reportWebVitals.js",[],"E:\\isc quang trung\\onJob\\restaurent\\src\\pages\\login.jsx",[],"E:\\isc quang trung\\onJob\\restaurent\\src\\controll\\input.jsx",[],["111","112"],"E:\\isc quang trung\\onJob\\restaurent\\src\\containers\\defauLayout.jsx",["113"],"import React, { Component, Fragment } from \"react\";\r\nimport Header from \"./header\";\r\nimport Home from \"./../pages/home\";\r\nimport routes from \"./../routes\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport LeftSite from \"./leftSite\";\r\nimport Footer from \"./footer\";\r\n\r\nclass DefauLayout extends Component {\r\n  state = {};\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        {/* <Header></Header>\r\n        <LeftSite />\r\n        <Switch>\r\n          {routes.map((route, idx) => {\r\n            return route.component ? (\r\n              <Route\r\n                key={idx}\r\n                path={route.path}\r\n                exact={route.exact}\r\n                name={route.name}\r\n                component={route.component}\r\n              />\r\n            ) : null;\r\n          })}\r\n        </Switch>\r\n        <Footer /> */}\r\n\r\n        <div>\r\n          <div id=\"wrapper\">\r\n            <LeftSite />\r\n            <div id=\"content-wrapper\" class=\"d-flex flex-column\">\r\n              <div id=\"content\">\r\n                <Header />\r\n\r\n                <Switch>\r\n                  {routes.map((route, idx) => {\r\n                    return route.component ? (\r\n                      <Route\r\n                        key={idx}\r\n                        path={route.path}\r\n                        exact={route.exact}\r\n                        name={route.name}\r\n                        component={route.component}\r\n                      />\r\n                    ) : null;\r\n                  })}\r\n                </Switch>\r\n              </div>\r\n              <Footer />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DefauLayout;\r\n","E:\\isc quang trung\\onJob\\restaurent\\src\\routes.js",[],"E:\\isc quang trung\\onJob\\restaurent\\src\\containers\\header.jsx",["114","115","116","117","118","119","120","121","122","123","124","125","126","127","128","129","130","131","132","133"],"import { Callbacks } from \"jquery\";\r\nimport React, { Component } from \"react\";\r\nimport \"./sa.css\";\r\nimport { Link } from \"react-router-dom/cjs/react-router-dom.min\";\r\n\r\nclass Header extends Component {\r\n  state = {};\r\n  render() {\r\n    return (\r\n      // <nav className=\"navbar navbar-expand-lg navbar-dark bg-primary\">\r\n      //   <div className=\"container\">\r\n      //     <Link className=\"navbar-brand\" to=\"/\">\r\n      //       Restaurent Manage\r\n      //     </Link>\r\n      //     <button\r\n      //       className=\"navbar-toggler\"\r\n      //       type=\"button\"\r\n      //       data-toggle=\"collapse\"\r\n      //       data-target=\"#navbarText\"\r\n      //       aria-controls=\"navbarText\"\r\n      //       aria-expanded=\"false\"\r\n      //       aria-label=\"Toggle navigation\"\r\n      //     >\r\n      //       <span className=\"navbar-toggler-icon\" />\r\n      //     </button>\r\n      //     <div className=\"collapse navbar-collapse\" id=\"navbarText\">\r\n      //       <ul className=\"navbar-nav mr-auto\">\r\n      //         <li className=\"nav-item active\">\r\n      //           <Link className=\"nav-link\" to=\"/\">\r\n      //             Home <span className=\"sr-only\">(current)</span>\r\n      //           </Link>\r\n      //         </li>\r\n      //         <li className=\"nav-item\">\r\n      //           <Link className=\"nav-link\" to=\"/major\">\r\n      //             Dish\r\n      //           </Link>\r\n      //         </li>\r\n      //         <li className=\"nav-item\">\r\n      //           <Link className=\"nav-link\" to=\"/student\">\r\n      //             Dish Category\r\n      //           </Link>\r\n      //         </li>\r\n      //       </ul>\r\n      //       <ul className=\"navbar-nav\">\r\n      //         <li className=\"nav-item\">\r\n      //           <a className=\"nav-link\" href=\"#\">\r\n      //             welcome to ...{\" \"}\r\n      //           </a>\r\n      //         </li>\r\n      //         <li className=\"nav-item\">\r\n      //           <Link className=\"nav-link\" to=\"/login\">\r\n      //             <a>Logout</a>\r\n      //             <i className=\"fas fa-sign-out-alt\" />\r\n      //           </Link>\r\n      //         </li>\r\n      //       </ul>\r\n      //     </div>\r\n      //   </div>\r\n      // </nav>\r\n      <div>\r\n        <nav className=\"navbar navbar-expand navbar-light bg-white topbar mb-4 static-top shadow\">\r\n          <button\r\n            id=\"sidebarToggleTop\"\r\n            className=\"btn btn-link d-md-none rounded-circle mr-3\"\r\n          >\r\n            <i className=\"fa fa-bars\" />\r\n          </button>\r\n          <form className=\"d-none d-sm-inline-block form-inline mr-auto ml-md-3 my-2 my-md-0 mw-100 navbar-search\">\r\n            <div className=\"input-group\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control bg-light border-0 small\"\r\n                placeholder=\"Search for...\"\r\n                aria-label=\"Search\"\r\n                aria-describedby=\"basic-addon2\"\r\n              />\r\n              <div className=\"input-group-append\">\r\n                <button className=\"btn btn-primary\" type=\"button\">\r\n                  <i className=\"fas fa-search fa-sm\" />\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </form>\r\n          <ul className=\"navbar-nav ml-auto\">\r\n            <li className=\"nav-item dropdown no-arrow d-sm-none\">\r\n              <a\r\n                className=\"nav-link dropdown-toggle\"\r\n                href=\"#\"\r\n                id=\"searchDropdown\"\r\n                role=\"button\"\r\n                data-toggle=\"dropdown\"\r\n                aria-haspopup=\"true\"\r\n                aria-expanded=\"false\"\r\n              >\r\n                <i className=\"fas fa-search fa-fw\" />\r\n              </a>\r\n              <div\r\n                className=\"dropdown-menu dropdown-menu-right p-3 shadow animated--grow-in\"\r\n                aria-labelledby=\"searchDropdown\"\r\n              >\r\n                <form className=\"form-inline mr-auto w-100 navbar-search\">\r\n                  <div className=\"input-group\">\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control bg-light border-0 small\"\r\n                      placeholder=\"Search for...\"\r\n                      aria-label=\"Search\"\r\n                      aria-describedby=\"basic-addon2\"\r\n                    />\r\n                    <div className=\"input-group-append\">\r\n                      <button className=\"btn btn-primary\" type=\"button\">\r\n                        <i className=\"fas fa-search fa-sm\" />\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </li>\r\n            <li className=\"nav-item dropdown no-arrow mx-1\">\r\n              <a\r\n                className=\"nav-link dropdown-toggle\"\r\n                href=\"#\"\r\n                id=\"alertsDropdown\"\r\n                role=\"button\"\r\n                data-toggle=\"dropdown\"\r\n                aria-haspopup=\"true\"\r\n                aria-expanded=\"false\"\r\n              >\r\n                <i className=\"fas fa-bell fa-fw\" />\r\n                <span className=\"badge badge-danger badge-counter\">3+</span>\r\n              </a>\r\n              <div\r\n                className=\"dropdown-list dropdown-menu dropdown-menu-right shadow animated--grow-in\"\r\n                aria-labelledby=\"alertsDropdown\"\r\n              >\r\n                <h6 className=\"dropdown-header\">Alerts Center</h6>\r\n                <a className=\"dropdown-item d-flex align-items-center\" href=\"#\">\r\n                  <div className=\"mr-3\">\r\n                    <div className=\"icon-circle bg-primary\">\r\n                      <i className=\"fas fa-file-alt text-white\" />\r\n                    </div>\r\n                  </div>\r\n                  <div>\r\n                    <div className=\"small text-gray-500\">December 12, 2019</div>\r\n                    <span className=\"font-weight-bold\">\r\n                      A new monthly report is ready to download!\r\n                    </span>\r\n                  </div>\r\n                </a>\r\n                <a className=\"dropdown-item d-flex align-items-center\" href=\"#\">\r\n                  <div className=\"mr-3\">\r\n                    <div className=\"icon-circle bg-success\">\r\n                      <i className=\"fas fa-donate text-white\" />\r\n                    </div>\r\n                  </div>\r\n                  <div>\r\n                    <div className=\"small text-gray-500\">December 7, 2019</div>\r\n                    $290.29 has been deposited into your account!\r\n                  </div>\r\n                </a>\r\n                <a className=\"dropdown-item d-flex align-items-center\" href=\"#\">\r\n                  <div className=\"mr-3\">\r\n                    <div className=\"icon-circle bg-warning\">\r\n                      <i className=\"fas fa-exclamation-triangle text-white\" />\r\n                    </div>\r\n                  </div>\r\n                  <div>\r\n                    <div className=\"small text-gray-500\">December 2, 2019</div>\r\n                    Spending Alert: We've noticed unusually high spending for\r\n                    your account.\r\n                  </div>\r\n                </a>\r\n                <a\r\n                  className=\"dropdown-item text-center small text-gray-500\"\r\n                  href=\"#\"\r\n                >\r\n                  Show All Alerts\r\n                </a>\r\n              </div>\r\n            </li>\r\n            <li className=\"nav-item dropdown no-arrow mx-1\">\r\n              <a\r\n                className=\"nav-link dropdown-toggle\"\r\n                href=\"#\"\r\n                id=\"messagesDropdown\"\r\n                role=\"button\"\r\n                data-toggle=\"dropdown\"\r\n                aria-haspopup=\"true\"\r\n                aria-expanded=\"false\"\r\n              >\r\n                <i className=\"fas fa-envelope fa-fw\" />\r\n                <span className=\"badge badge-danger badge-counter\">7</span>\r\n              </a>\r\n              <div\r\n                className=\"dropdown-list dropdown-menu dropdown-menu-right shadow animated--grow-in\"\r\n                aria-labelledby=\"messagesDropdown\"\r\n              >\r\n                <h6 className=\"dropdown-header\">Message Center</h6>\r\n                <a className=\"dropdown-item d-flex align-items-center\" href=\"#\">\r\n                  <div className=\"dropdown-list-image mr-3\">\r\n                    <img\r\n                      className=\"rounded-circle\"\r\n                      src=\"https://source.unsplash.com/fn_BT9fwg_E/60x60\"\r\n                      alt=\"\"\r\n                    />\r\n                    <div className=\"status-indicator bg-success\" />\r\n                  </div>\r\n                  <div className=\"font-weight-bold\">\r\n                    <div className=\"text-truncate\">\r\n                      Hi there! I am wondering if you can help me with a problem\r\n                      I've been having.\r\n                    </div>\r\n                    <div className=\"small text-gray-500\">\r\n                      Emily Fowler · 58m\r\n                    </div>\r\n                  </div>\r\n                </a>\r\n                <a className=\"dropdown-item d-flex align-items-center\" href=\"#\">\r\n                  <div className=\"dropdown-list-image mr-3\">\r\n                    <img\r\n                      className=\"rounded-circle\"\r\n                      src=\"https://source.unsplash.com/AU4VPcFN4LE/60x60\"\r\n                      alt=\"\"\r\n                    />\r\n                    <div className=\"status-indicator\" />\r\n                  </div>\r\n                  <div>\r\n                    <div className=\"text-truncate\">\r\n                      I have the photos that you ordered last month, how would\r\n                      you like them sent to you?\r\n                    </div>\r\n                    <div className=\"small text-gray-500\">Jae Chun · 1d</div>\r\n                  </div>\r\n                </a>\r\n                <a className=\"dropdown-item d-flex align-items-center\" href=\"#\">\r\n                  <div className=\"dropdown-list-image mr-3\">\r\n                    <img\r\n                      className=\"rounded-circle\"\r\n                      src=\"https://source.unsplash.com/CS2uCrpNzJY/60x60\"\r\n                      alt=\"\"\r\n                    />\r\n                    <div className=\"status-indicator bg-warning\" />\r\n                  </div>\r\n                  <div>\r\n                    <div className=\"text-truncate\">\r\n                      Last month's report looks great, I am very happy with the\r\n                      progress so far, keep up the good work!\r\n                    </div>\r\n                    <div className=\"small text-gray-500\">\r\n                      Morgan Alvarez · 2d\r\n                    </div>\r\n                  </div>\r\n                </a>\r\n                <a className=\"dropdown-item d-flex align-items-center\" href=\"#\">\r\n                  <div className=\"dropdown-list-image mr-3\">\r\n                    <img\r\n                      className=\"rounded-circle\"\r\n                      src=\"https://source.unsplash.com/Mv9hjnEUHR4/60x60\"\r\n                      alt=\"\"\r\n                    />\r\n                    <div className=\"status-indicator bg-success\" />\r\n                  </div>\r\n                  <div>\r\n                    <div className=\"text-truncate\">\r\n                      Am I a good boy? The reason I ask is because someone told\r\n                      me that people say this to all dogs, even if they aren't\r\n                      good...\r\n                    </div>\r\n                    <div className=\"small text-gray-500\">\r\n                      Chicken the Dog · 2w\r\n                    </div>\r\n                  </div>\r\n                </a>\r\n                <a\r\n                  className=\"dropdown-item text-center small text-gray-500\"\r\n                  href=\"#\"\r\n                >\r\n                  Read More Messages\r\n                </a>\r\n              </div>\r\n            </li>\r\n            <div className=\"topbar-divider d-none d-sm-block\" />\r\n            <li className=\"nav-item dropdown no-arrow\">\r\n              <a\r\n                className=\"nav-link dropdown-toggle\"\r\n                href=\"#\"\r\n                id=\"userDropdown\"\r\n                role=\"button\"\r\n                data-toggle=\"dropdown\"\r\n                aria-haspopup=\"true\"\r\n                aria-expanded=\"false\"\r\n              >\r\n                <span className=\"mr-2 d-none d-lg-inline text-gray-600 small\">\r\n                  Valerie Luna\r\n                </span>\r\n                <img\r\n                  className=\"img-profile rounded-circle\"\r\n                  src=\"https://source.unsplash.com/QAB-WJcbgJk/60x60\"\r\n                />\r\n              </a>\r\n              <div\r\n                className=\"dropdown-menu dropdown-menu-right shadow animated--grow-in\"\r\n                aria-labelledby=\"userDropdown\"\r\n              >\r\n                <a className=\"dropdown-item\" href=\"#\">\r\n                  <i className=\"fas fa-user fa-sm fa-fw mr-2 text-gray-400\" />\r\n                  Profile\r\n                </a>\r\n                <a className=\"dropdown-item\" href=\"#\">\r\n                  <i className=\"fas fa-cogs fa-sm fa-fw mr-2 text-gray-400\" />\r\n                  Settings\r\n                </a>\r\n                <a className=\"dropdown-item\" href=\"#\">\r\n                  <i className=\"fas fa-list fa-sm fa-fw mr-2 text-gray-400\" />\r\n                  Activity Log\r\n                </a>\r\n                <div className=\"dropdown-divider\" />\r\n                <a\r\n                  className=\"dropdown-item\"\r\n                  href=\"#\"\r\n                  data-toggle=\"modal\"\r\n                  data-target=\"#logoutModal\"\r\n                >\r\n                  <i className=\"fas fa-sign-out-alt fa-sm fa-fw mr-2 text-gray-400\" />\r\n                  Logout\r\n                </a>\r\n              </div>\r\n            </li>\r\n          </ul>\r\n        </nav>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","E:\\isc quang trung\\onJob\\restaurent\\src\\pages\\home.jsx",[],"E:\\isc quang trung\\onJob\\restaurent\\src\\containers\\leftSite.jsx",[],"E:\\isc quang trung\\onJob\\restaurent\\src\\containers\\footer.jsx",[],"E:\\isc quang trung\\onJob\\restaurent\\src\\pages\\dish.jsx",["134","135"],"import React, { useState, Fragment, useEffect } from \"react\";\r\nimport { Button, Modal } from \"react-bootstrap\";\r\nimport Input from \"../controll/input\";\r\nimport { useFormik, yupToFormErrors } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nconst Dish = (props) => {\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      dishName: \"\",\r\n      dishPrice: \"\",\r\n      status: \"\",\r\n      onsale: \"\",\r\n      dishCategory: \"\",\r\n    },\r\n    validationSchema: Yup.object({\r\n      dishName: Yup.string()\r\n        .required(\"Require\")\r\n        .min(5, \"Must be 5 characters or more\"),\r\n      dishPrice: Yup.string().required(\"Require\"),\r\n      status: Yup.string()\r\n        .required(\"Require\")\r\n        .min(5, \"Must be 5 characters or more\"),\r\n      onsale: Yup.string().required(\"Require\"),\r\n      dishCategory: Yup.string()\r\n        .required(\"Require\")\r\n        .min(5, \"Must be 5 characters or more\"),\r\n    }),\r\n    onSubmit: (values) => {\r\n      handleFormSubmit(values);\r\n    },\r\n  });\r\n\r\n  const [modalShow, setModalShow] = useState(false);\r\n\r\n  const handleModalClose = () => {\r\n    setModalShow(false);\r\n  };\r\n  const handleModalShow = (e, dataId) => {\r\n    if (e) e.preventDefault();\r\n    // setMajorId(dataId);\r\n    // if (dataId > 0) {\r\n    //   majorService.get(dataId).then((res) => {\r\n    //     formik.setValues(res.data);\r\n    setModalShow(true);\r\n    //   });\r\n    // } else {\r\n    //   formik.resetForm();\r\n    //   setModalShow(true);\r\n    // }\r\n  };\r\n\r\n  const handleFormSubmit = (data) => {};\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"container mt-4\">\r\n        <div className=\"card border-primary bt-primary-5\">\r\n          <div className=\"card-header\">\r\n            <div className=\"row\">\r\n              <div className=\"col\">\r\n                <h3 className=\"card-title\">Món ăn</h3>\r\n              </div>\r\n              <div>\r\n                <input\r\n                  placeholder=\"Tìm kiếm theo tên\"\r\n                  id=\"txtSearch\"\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                ></input>\r\n              </div>\r\n              <div className=\"col-auto\">\r\n                <button type=\"button\" className=\"btn btn-primary\">\r\n                  <i class=\"fas fa-search\"></i>\r\n                </button>\r\n              </div>\r\n              <div className=\"col-auto\">\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-primary\"\r\n                  data-toggle=\"modal\"\r\n                  onClick={() => handleModalShow(null, 0)}\r\n                >\r\n                  <i className=\"fas fa-plus\" /> Thêm\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"card-body\">\r\n            <div className=\"table-responsive\">\r\n              <table className=\"table table-bordered table-hover table-striped\">\r\n                <thead>\r\n                  <tr className=\"table-primary\">\r\n                    <th style={{ width: \"50px\" }}>#</th>\r\n                    <th>Tên món ăn</th>\r\n                    <th>Giá</th>\r\n                    <th>Khuyến mãi</th>\r\n                    <th>Trạng thái</th>\r\n                    <th>Ảnh</th>\r\n                    <th>Loại món ăn</th>\r\n                    <th style={{ width: \"80px\" }} />\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {/* {majors.map((major, idx) => {\r\n                    return (\r\n                      <tr key={major.id}>\r\n                        <td>{idx + 1}</td>\r\n                        <td>{major.name}</td>\r\n                        <td>\r\n                          <a\r\n                            href=\"/#\"\r\n                            onClick={(e) => handleModalShow(e, major.id)}\r\n                          >\r\n                            <i className=\"fas fa-edit text-primary\" />\r\n                          </a>\r\n                          <a href=\"/#\" onClick={(e) => deleteRow(e, major.id)}>\r\n                            <i className=\"fas fa-trash-alt text-danger\" />\r\n                          </a>\r\n                        </td>\r\n                      </tr>\r\n                    );\r\n                  })} */}\r\n                  <tr>\r\n                    <td>2</td>\r\n                    <td>Marketing</td>\r\n                    <td>Marketing</td>\r\n                    <td>Marketing</td>\r\n                    <td>Marketing</td>\r\n                    <td>Marketing</td>\r\n                    <td>Marketing</td>\r\n\r\n                    <td>\r\n                      <a href=\"/#\" onClick={(e) => handleModalShow(e)}>\r\n                        <i className=\"fas fa-edit text-primary\" />\r\n                      </a>\r\n                      <a href=\"/#\">\r\n                        <i className=\"fas fa-trash-alt text-danger ml-2\" />\r\n                      </a>\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <Modal\r\n        show={modalShow}\r\n        onHide={handleModalClose}\r\n        backdrop=\"static\"\r\n        keyboard={false}\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Món ăn</Modal.Title>\r\n        </Modal.Header>\r\n        <form onSubmit={formik.handleSubmit}>\r\n          <Modal.Body>\r\n            <Input\r\n              id=\"txtDishName\"\r\n              type=\"text\"\r\n              lable=\"Tên món ăn\"\r\n              maxLength=\"100\"\r\n              frmField={formik.getFieldProps(\"dishName\")}\r\n              err={formik.touched.dishName && formik.errors.dishName}\r\n              errMessage={formik.errors.dishName}\r\n            ></Input>\r\n            <Input\r\n              id=\"txtDishPrice\"\r\n              type=\"number\"\r\n              lable=\"Giá\"\r\n              maxLength=\"100\"\r\n              frmField={formik.getFieldProps(\"dishPrice\")}\r\n              err={formik.touched.dishPrice && formik.errors.dishPrice}\r\n              errMessage={formik.errors.dishPrice}\r\n            ></Input>\r\n            <Input\r\n              id=\"txtOnsale\"\r\n              type=\"number\"\r\n              lable=\"Khuyến mãi\"\r\n              maxLength=\"100\"\r\n              frmField={formik.getFieldProps(\"onsale\")}\r\n              err={formik.touched.onsale && formik.errors.onsale}\r\n              errMessage={formik.errors.onsale}\r\n            ></Input>\r\n            <Input\r\n              id=\"txtStatus\"\r\n              type=\"text\"\r\n              lable=\"Trạng thái\"\r\n              maxLength=\"100\"\r\n              frmField={formik.getFieldProps(\"status\")}\r\n              err={formik.touched.status && formik.errors.status}\r\n              errMessage={formik.errors.status}\r\n            ></Input>\r\n            <Input\r\n              type=\"file\"\r\n              lable=\"Ảnh\"\r\n              id=\"fileAvatar\"\r\n              frmField={formik.getFieldProps(\"avatar\")}\r\n              err={formik.touched.avatar && formik.errors.avatar}\r\n              errMessage={formik.errors.avatar}\r\n            />\r\n            <select\r\n              className=\"form-control mb-4\"\r\n              id=\"dishCategory\"\r\n              frmField={formik.getFieldProps(\"dishCategory\")}\r\n              err={formik.touched.dishCategory && formik.errors.dishCategory}\r\n              errMessage={formik.errors.dishCategory}\r\n            >\r\n              <option value=\"dishCategory\">Danh mục món ăn</option>\r\n            </select>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"secondary\" onClick={handleModalClose}>\r\n              Close\r\n            </Button>\r\n            <Button\r\n              variant=\"primary\"\r\n              type=\"submit\"\r\n              // disabled={!(formik.dirty && formik.isValid)}\r\n            >\r\n              Save\r\n            </Button>\r\n          </Modal.Footer>\r\n        </form>\r\n      </Modal>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Dish;\r\n","E:\\isc quang trung\\onJob\\restaurent\\src\\pages\\dishCategory.jsx",["136","137"],"import React, { useState, Fragment, useEffect } from \"react\";\r\nimport { Button, Modal } from \"react-bootstrap\";\r\nimport Input from \"../controll/input\";\r\nimport { useFormik, yupToFormErrors } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nconst DishCategory = (props) => {\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      dishCategoryName: \"\",\r\n    },\r\n    validationSchema: Yup.object({\r\n      dishCategoryName: Yup.string()\r\n        .required(\"Require\")\r\n        .min(5, \"Must be 5 characters or more\"),\r\n    }),\r\n    onSubmit: (values) => {\r\n      handleFormSubmit(values);\r\n    },\r\n  });\r\n\r\n  const [modalShow, setModalShow] = useState(false);\r\n\r\n  const handleModalClose = () => {\r\n    setModalShow(false);\r\n  };\r\n  const handleModalShow = (e, dataId) => {\r\n    if (e) e.preventDefault();\r\n    // setMajorId(dataId);\r\n    // if (dataId > 0) {\r\n    //   majorService.get(dataId).then((res) => {\r\n    //     formik.setValues(res.data);\r\n    setModalShow(true);\r\n    //   });\r\n    // } else {\r\n    //   formik.resetForm();\r\n    //   setModalShow(true);\r\n    // }\r\n  };\r\n\r\n  const handleFormSubmit = (data) => {};\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"container mt-4\">\r\n        <div className=\"card border-primary bt-primary-5\">\r\n          <div className=\"card-header\">\r\n            <div className=\"row\">\r\n              <div className=\"col\">\r\n                <h3 className=\"card-title\">Danh mục món ăn</h3>\r\n              </div>\r\n              <div>\r\n                <input\r\n                  placeholder=\"Tìm kiếm theo tên\"\r\n                  id=\"txtSearch\"\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                ></input>\r\n              </div>\r\n              <div className=\"col-auto\">\r\n                <button type=\"button\" className=\"btn btn-primary\">\r\n                  <i class=\"fas fa-search\"></i>\r\n                </button>\r\n              </div>\r\n              <div className=\"col-auto\">\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-primary\"\r\n                  data-toggle=\"modal\"\r\n                  onClick={() => handleModalShow(null, 0)}\r\n                >\r\n                  <i className=\"fas fa-plus\" /> Thêm\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"card-body\">\r\n            <div className=\"table-responsive\">\r\n              <table className=\"table table-bordered table-hover table-striped\">\r\n                <thead>\r\n                  <tr className=\"table-primary\">\r\n                    <th style={{ width: \"50px\" }}>#</th>\r\n                    <th>Tên Danh mục món ăn</th>\r\n                    <th style={{ width: \"80px\" }} />\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {/* {majors.map((major, idx) => {\r\n                    return (\r\n                      <tr key={major.id}>\r\n                        <td>{idx + 1}</td>\r\n                        <td>{major.name}</td>\r\n                        <td>\r\n                          <a\r\n                            href=\"/#\"\r\n                            onClick={(e) => handleModalShow(e, major.id)}\r\n                          >\r\n                            <i className=\"fas fa-edit text-primary\" />\r\n                          </a>\r\n                          <a href=\"/#\" onClick={(e) => deleteRow(e, major.id)}>\r\n                            <i className=\"fas fa-trash-alt text-danger\" />\r\n                          </a>\r\n                        </td>\r\n                      </tr>\r\n                    );\r\n                  })} */}\r\n                  <tr>\r\n                    <td>2</td>\r\n                    <td>Marketing</td>\r\n\r\n                    <td>\r\n                      <a href=\"/#\" onClick={(e) => handleModalShow(e)}>\r\n                        <i className=\"fas fa-edit text-primary\" />\r\n                      </a>\r\n                      <a href=\"/#\">\r\n                        <i className=\"fas fa-trash-alt text-danger ml-2\" />\r\n                      </a>\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <Modal\r\n        show={modalShow}\r\n        onHide={handleModalClose}\r\n        backdrop=\"static\"\r\n        keyboard={false}\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Danh mục món ăn</Modal.Title>\r\n        </Modal.Header>\r\n        <form onSubmit={formik.handleSubmit}>\r\n          <Modal.Body>\r\n            <Input\r\n              id=\"txtDishCategoryName\"\r\n              type=\"text\"\r\n              lable=\"Tên danh mục món ăn\"\r\n              maxLength=\"100\"\r\n              frmField={formik.getFieldProps(\"dishCategoryName\")}\r\n              err={\r\n                formik.touched.dishCategoryName &&\r\n                formik.errors.dishCategoryName\r\n              }\r\n              errMessage={formik.errors.dishCategoryName}\r\n            ></Input>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"secondary\" onClick={handleModalClose}>\r\n              Close\r\n            </Button>\r\n            <Button\r\n              variant=\"primary\"\r\n              type=\"submit\"\r\n              // disabled={!(formik.dirty && formik.isValid)}\r\n            >\r\n              Save\r\n            </Button>\r\n          </Modal.Footer>\r\n        </form>\r\n      </Modal>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default DishCategory;\r\n","E:\\isc quang trung\\onJob\\restaurent\\src\\pages\\orderDetails.jsx",["138","139"],"import React, { useState, Fragment, useEffect } from \"react\";\r\nimport { Button, Modal } from \"react-bootstrap\";\r\nimport Input from \"../controll/input\";\r\nimport { useFormik, yupToFormErrors } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nconst OrderDetails = (props) => {\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      price: \"\",\r\n      quantity: \"\",\r\n      dish: \"\",\r\n      order: \"\",\r\n    },\r\n    validationSchema: Yup.object({\r\n      price: Yup.string().required(\"Require\"),\r\n      quantity: Yup.string().required(\"Require\"),\r\n    }),\r\n    onSubmit: (values) => {\r\n      handleFormSubmit(values);\r\n    },\r\n  });\r\n\r\n  const [modalShow, setModalShow] = useState(false);\r\n\r\n  const handleModalClose = () => {\r\n    setModalShow(false);\r\n  };\r\n  const handleModalShow = (e, dataId) => {\r\n    if (e) e.preventDefault();\r\n    // setMajorId(dataId);\r\n    // if (dataId > 0) {\r\n    //   majorService.get(dataId).then((res) => {\r\n    //     formik.setValues(res.data);\r\n    setModalShow(true);\r\n    //   });\r\n    // } else {\r\n    //   formik.resetForm();\r\n    //   setModalShow(true);\r\n    // }\r\n  };\r\n\r\n  const handleFormSubmit = (data) => {};\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"container mt-4\">\r\n        <div className=\"card border-primary bt-primary-5\">\r\n          <div className=\"card-header\">\r\n            <div className=\"row\">\r\n              <div className=\"col\">\r\n                <h3 className=\"card-title\">\r\n                  Món ăn <small className=\"text-muted\">list</small>\r\n                </h3>\r\n              </div>\r\n              <div>\r\n                <input\r\n                  placeholder=\"Tìm kiếm theo tên\"\r\n                  id=\"txtSearch\"\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                ></input>\r\n              </div>\r\n              <div className=\"col-auto\">\r\n                <button type=\"button\" className=\"btn btn-primary\">\r\n                  <i class=\"fas fa-search\"></i>\r\n                </button>\r\n              </div>\r\n              <div className=\"col-auto\">\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-primary\"\r\n                  data-toggle=\"modal\"\r\n                  onClick={() => handleModalShow(null, 0)}\r\n                >\r\n                  <i className=\"fas fa-plus\" /> Thêm\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"card-body\">\r\n            <div className=\"table-responsive\">\r\n              <table className=\"table table-bordered table-hover table-striped\">\r\n                <thead>\r\n                  <tr className=\"table-primary\">\r\n                    <th style={{ width: \"50px\" }}>#</th>\r\n                    <th>Món ăn</th>\r\n                    <th>Số lượng</th>\r\n                    <th>Giá</th>\r\n                    <th>Hoá đơn</th>\r\n                    <th style={{ width: \"80px\" }} />\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {/* {majors.map((major, idx) => {\r\n                    return (\r\n                      <tr key={major.id}>\r\n                        <td>{idx + 1}</td>\r\n                        <td>{major.name}</td>\r\n                        <td>\r\n                          <a\r\n                            href=\"/#\"\r\n                            onClick={(e) => handleModalShow(e, major.id)}\r\n                          >\r\n                            <i className=\"fas fa-edit text-primary\" />\r\n                          </a>\r\n                          <a href=\"/#\" onClick={(e) => deleteRow(e, major.id)}>\r\n                            <i className=\"fas fa-trash-alt text-danger\" />\r\n                          </a>\r\n                        </td>\r\n                      </tr>\r\n                    );\r\n                  })} */}\r\n                  <tr>\r\n                    <td>2</td>\r\n                    <td>Marketing</td>\r\n                    <td>Marketing</td>\r\n                    <td>Marketing</td>\r\n                    <td>Marketing</td>\r\n\r\n                    <td>\r\n                      <a href=\"/#\" onClick={(e) => handleModalShow(e)}>\r\n                        <i className=\"fas fa-edit text-primary\" />\r\n                      </a>\r\n                      <a href=\"/#\">\r\n                        <i className=\"fas fa-trash-alt text-danger ml-2\" />\r\n                      </a>\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <Modal\r\n        show={modalShow}\r\n        onHide={handleModalClose}\r\n        backdrop=\"static\"\r\n        keyboard={false}\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Chi tiết hoá đơn</Modal.Title>\r\n        </Modal.Header>\r\n        <form onSubmit={formik.handleSubmit}>\r\n          <Modal.Body>\r\n            <Input\r\n              id=\"txtPrice\"\r\n              type=\"number\"\r\n              lable=\"Giá\"\r\n              maxLength=\"100\"\r\n              frmField={formik.getFieldProps(\"price\")}\r\n              err={formik.touched.price && formik.errors.price}\r\n              errMessage={formik.errors.price}\r\n            ></Input>\r\n            <Input\r\n              id=\"txtQuantity\"\r\n              type=\"number\"\r\n              lable=\"Số lượng\"\r\n              maxLength=\"100\"\r\n              frmField={formik.getFieldProps(\"quantity\")}\r\n              err={formik.touched.quantity && formik.errors.quantity}\r\n              errMessage={formik.errors.quantity}\r\n            ></Input>\r\n            <select\r\n              className=\"form-control mb-4\"\r\n              id=\"dish\"\r\n              frmField={formik.getFieldProps(\"dish\")}\r\n              err={formik.touched.dish && formik.errors.dish}\r\n              errMessage={formik.errors.dish}\r\n            >\r\n              <option value=\"dish\">Món ăn</option>\r\n            </select>\r\n            <select\r\n              className=\"form-control mb-4\"\r\n              id=\"order\"\r\n              frmField={formik.getFieldProps(\"order\")}\r\n              err={formik.touched.order && formik.errors.order}\r\n              errMessage={formik.errors.order}\r\n            >\r\n              <option value=\"order\">Hoá đơn</option>\r\n            </select>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"secondary\" onClick={handleModalClose}>\r\n              Close\r\n            </Button>\r\n            <Button\r\n              variant=\"primary\"\r\n              type=\"submit\"\r\n              // disabled={!(formik.dirty && formik.isValid)}\r\n            >\r\n              Save\r\n            </Button>\r\n          </Modal.Footer>\r\n        </form>\r\n      </Modal>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default OrderDetails;\r\n","E:\\isc quang trung\\onJob\\restaurent\\src\\pages\\customer.jsx",["140","141"],"import React, { useState, Fragment, useEffect } from \"react\";\r\nimport { Button, Modal } from \"react-bootstrap\";\r\nimport Input from \"../controll/input\";\r\nimport { useFormik, yupToFormErrors } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nconst Customer = (props) => {\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      fullName: \"\",\r\n      address: \"\",\r\n      gender: \"\",\r\n      phoneNum: \"\",\r\n    },\r\n    validationSchema: Yup.object({\r\n      fullName: Yup.string()\r\n        .required(\"Require\")\r\n        .min(5, \"Must be 5 characters or more\"),\r\n      address: Yup.string()\r\n        .required(\"Require\")\r\n        .min(5, \"Must be 5 characters or more\"),\r\n      gender: Yup.string().required(\"Require\"),\r\n      phoneNum: Yup.string().required(\"Require\"),\r\n    }),\r\n    onSubmit: (values) => {\r\n      handleFormSubmit(values);\r\n    },\r\n  });\r\n\r\n  const [modalShow, setModalShow] = useState(false);\r\n\r\n  const handleModalClose = () => {\r\n    setModalShow(false);\r\n  };\r\n  const handleModalShow = (e, dataId) => {\r\n    if (e) e.preventDefault();\r\n    // setMajorId(dataId);\r\n    // if (dataId > 0) {\r\n    //   majorService.get(dataId).then((res) => {\r\n    //     formik.setValues(res.data);\r\n    setModalShow(true);\r\n    //   });\r\n    // } else {\r\n    //   formik.resetForm();\r\n    //   setModalShow(true);\r\n    // }\r\n  };\r\n\r\n  const handleFormSubmit = (data) => {};\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"container mt-4\">\r\n        <div className=\"card border-primary bt-primary-5\">\r\n          <div className=\"card-header\">\r\n            <div className=\"row\">\r\n              <div className=\"col\">\r\n                <h3 className=\"card-title\">Khách hàng</h3>\r\n              </div>\r\n              <div>\r\n                <input\r\n                  placeholder=\"Tìm kiếm theo tên\"\r\n                  id=\"txtSearch\"\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                ></input>\r\n              </div>\r\n              <div className=\"col-auto\">\r\n                <button type=\"button\" className=\"btn btn-primary\">\r\n                  <i class=\"fas fa-search\"></i>\r\n                </button>\r\n              </div>\r\n              <div className=\"col-auto\">\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-primary\"\r\n                  data-toggle=\"modal\"\r\n                  onClick={() => handleModalShow(null, 0)}\r\n                >\r\n                  <i className=\"fas fa-plus\" /> Thêm\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"card-body\">\r\n            <div className=\"table-responsive\">\r\n              <table className=\"table table-bordered table-hover table-striped\">\r\n                <thead>\r\n                  <tr className=\"table-primary\">\r\n                    <th style={{ width: \"50px\" }}>#</th>\r\n                    <th>Họ tên khách hàng</th>\r\n                    <th>Địa chỉ</th>\r\n                    <th>Giới tính</th>\r\n                    <th>phoneNum</th>\r\n                    <th style={{ width: \"80px\" }} />\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {/* {majors.map((major, idx) => {\r\n                    return (\r\n                      <tr key={major.id}>\r\n                        <td>{idx + 1}</td>\r\n                        <td>{major.name}</td>\r\n                        <td>\r\n                          <a\r\n                            href=\"/#\"\r\n                            onClick={(e) => handleModalShow(e, major.id)}\r\n                          >\r\n                            <i className=\"fas fa-edit text-primary\" />\r\n                          </a>\r\n                          <a href=\"/#\" onClick={(e) => deleteRow(e, major.id)}>\r\n                            <i className=\"fas fa-trash-alt text-danger\" />\r\n                          </a>\r\n                        </td>\r\n                      </tr>\r\n                    );\r\n                  })} */}\r\n                  <tr>\r\n                    <td>2</td>\r\n                    <td>Marketing</td>\r\n                    <td>Marketing</td>\r\n                    <td>Marketing</td>\r\n                    <td>Marketing</td>\r\n\r\n                    <td>\r\n                      <a href=\"/#\" onClick={(e) => handleModalShow(e)}>\r\n                        <i className=\"fas fa-edit text-primary\" />\r\n                      </a>\r\n                      <a href=\"/#\">\r\n                        <i className=\"fas fa-trash-alt text-danger ml-2\" />\r\n                      </a>\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <Modal\r\n        show={modalShow}\r\n        onHide={handleModalClose}\r\n        backdrop=\"static\"\r\n        keyboard={false}\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Món ăn</Modal.Title>\r\n        </Modal.Header>\r\n        <form onSubmit={formik.handleSubmit}>\r\n          <Modal.Body>\r\n            <Input\r\n              id=\"txtFullName\"\r\n              type=\"text\"\r\n              lable=\"Họ tên khách hàng\"\r\n              maxLength=\"100\"\r\n              frmField={formik.getFieldProps(\"fullName\")}\r\n              err={formik.touched.fullName && formik.errors.fullName}\r\n              errMessage={formik.errors.fullName}\r\n            ></Input>\r\n            <Input\r\n              id=\"txtAddress\"\r\n              type=\"text\"\r\n              lable=\"Địa chỉ\"\r\n              maxLength=\"200\"\r\n              frmField={formik.getFieldProps(\"address\")}\r\n              err={formik.touched.address && formik.errors.address}\r\n              errMessage={formik.errors.address}\r\n            ></Input>\r\n            <Input\r\n              id=\"txtPhoneNum\"\r\n              type=\"number\"\r\n              lable=\"Số điện thoại\"\r\n              maxLength=\"11\"\r\n              frmField={formik.getFieldProps(\"phoneNum\")}\r\n              err={formik.touched.phoneNum && formik.errors.phoneNum}\r\n              errMessage={formik.errors.phoneNum}\r\n            ></Input>\r\n            <div className=\"mb-4\">\r\n              <div className=\"form-check\">\r\n                <input\r\n                  className=\"form-check-input\"\r\n                  type=\"radio\"\r\n                  name=\"flexRadioDefault\"\r\n                  id=\"flexRadioDefault1\"\r\n                />\r\n                <label className=\"form-check-label\" htmlFor=\"flexRadioDefault1\">\r\n                  Nam\r\n                </label>\r\n              </div>\r\n              <div className=\"form-check\">\r\n                <input\r\n                  className=\"form-check-input\"\r\n                  type=\"radio\"\r\n                  name=\"flexRadioDefault\"\r\n                  id=\"flexRadioDefault2\"\r\n                  defaultChecked\r\n                />\r\n                <label className=\"form-check-label\" htmlFor=\"flexRadioDefault2\">\r\n                  Nữ\r\n                </label>\r\n              </div>\r\n            </div>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"secondary\" onClick={handleModalClose}>\r\n              Close\r\n            </Button>\r\n            <Button\r\n              variant=\"primary\"\r\n              type=\"submit\"\r\n              // disabled={!(formik.dirty && formik.isValid)}\r\n            >\r\n              Save\r\n            </Button>\r\n          </Modal.Footer>\r\n        </form>\r\n      </Modal>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Customer;\r\n","E:\\isc quang trung\\onJob\\restaurent\\src\\pages\\order.jsx",["142","143","144"],"import React, { useState, Fragment, useEffect } from \"react\";\r\nimport { Button, Modal } from \"react-bootstrap\";\r\nimport Input from \"../controll/input\";\r\nimport { useFormik, yupToFormErrors } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nconst Order = (props) => {\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      createDate: \"\",\r\n      onsale: \"\",\r\n      totalPrice: \"\",\r\n      customer: \"\",\r\n      staff: \"\",\r\n      table: \"\",\r\n    },\r\n    validationSchema: Yup.object({}),\r\n    onSubmit: (values) => {\r\n      handleFormSubmit(values);\r\n    },\r\n  });\r\n\r\n  const [modalShow, setModalShow] = useState(false);\r\n\r\n  const handleModalClose = () => {\r\n    setModalShow(false);\r\n  };\r\n  const handleModalShow = (e, dataId) => {\r\n    if (e) e.preventDefault();\r\n    // setMajorId(dataId);\r\n    // if (dataId > 0) {\r\n    //   majorService.get(dataId).then((res) => {\r\n    //     formik.setValues(res.data);\r\n    setModalShow(true);\r\n    //   });\r\n    // } else {\r\n    //   formik.resetForm();\r\n    //   setModalShow(true);\r\n    // }\r\n  };\r\n\r\n  const handleFormSubmit = (data) => {};\r\n\r\n  const [orderDetailShow, setOrderDetailShow] = useState(false);\r\n\r\n  const handleOrderDetailClose = () => {\r\n    setOrderDetailShow(false);\r\n  };\r\n  const handleOrderDetailShow = (e, dataId) => {\r\n    if (e) e.preventDefault();\r\n    // setMajorId(dataId);\r\n    // if (dataId > 0) {\r\n    //   majorService.get(dataId).then((res) => {\r\n    //     formik.setValues(res.data);\r\n    setOrderDetailShow(true);\r\n    //   });\r\n    // } else {\r\n    //   formik.resetForm();\r\n    //   setModalShow(true);\r\n    // }\r\n  };\r\n\r\n  const handleOrderDetailSubmit = (data) => {};\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"container mt-4\">\r\n        <div className=\"card border-primary bt-primary-5\">\r\n          <div className=\"card-header\">\r\n            <div className=\"row\">\r\n              <div className=\"col\">\r\n                <h3 className=\"card-title\">Hoá đơn</h3>\r\n              </div>\r\n              <div>\r\n                <input\r\n                  placeholder=\"Tìm kiếm theo tên\"\r\n                  id=\"txtSearch\"\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                ></input>\r\n              </div>\r\n              <div className=\"col-auto\">\r\n                <button type=\"button\" className=\"btn btn-primary\">\r\n                  <i class=\"fas fa-search\"></i>\r\n                </button>\r\n              </div>\r\n              <div className=\"col-auto\">\r\n                {/* <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-primary\"\r\n                  data-toggle=\"modal\"\r\n                  onClick={() => handleModalShow(null, 0)}\r\n                >\r\n                  <i className=\"fas fa-plus\" /> Thêm\r\n                </button> */}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"card-body\">\r\n            <div className=\"table-responsive\">\r\n              <table className=\"table table-bordered table-hover table-striped\">\r\n                <thead>\r\n                  <tr className=\"table-primary\">\r\n                    <th style={{ width: \"50px\" }}>#</th>\r\n                    <th>Ngày tạo</th>\r\n                    <th>Khuyến mãi</th>\r\n                    <th>Đã thanh toán</th>\r\n                    <th>Tổng tiền</th>\r\n                    <th>Khách hàng</th>\r\n                    <th>Nhân viên</th>\r\n                    <th>Bàn</th>\r\n                    <th style={{ width: \"90px\" }} />\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {/* {majors.map((major, idx) => {\r\n                    return (\r\n                      <tr key={major.id}>\r\n                        <td>{idx + 1}</td>\r\n                        <td>{major.name}</td>\r\n                        <td>\r\n                          <a\r\n                            href=\"/#\"\r\n                            onClick={(e) => handleModalShow(e, major.id)}\r\n                          >\r\n                            <i className=\"fas fa-edit text-primary\" />\r\n                          </a>\r\n                          <a href=\"/#\" onClick={(e) => deleteRow(e, major.id)}>\r\n                            <i className=\"fas fa-trash-alt text-danger\" />\r\n                          </a>\r\n                        </td>\r\n                      </tr>\r\n                    );\r\n                  })} */}\r\n                  <tr>\r\n                    <td>2</td>\r\n                    <td>Marketing</td>\r\n                    <td>Marketing</td>\r\n                    <td>Marketing</td>\r\n                    <td>Marketing</td>\r\n                    <td>Marketing</td>\r\n                    <td>Marketing</td>\r\n                    <td>Marketing</td>\r\n\r\n                    <td>\r\n                      <a href=\"/#\" onClick={(e) => handleModalShow(e)}>\r\n                        <i className=\"fas fa-edit text-primary\" />\r\n                      </a>\r\n                      <a href=\"/#\">\r\n                        <i className=\"fas fa-trash-alt text-danger ml-1\" />\r\n                      </a>\r\n                      <a href=\"/#\" onClick={(e) => handleOrderDetailShow(e)}>\r\n                        <i class=\"fas fa-list-alt ml-1\"></i>\r\n                      </a>\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <Modal\r\n        size=\"lg\"\r\n        centered\r\n        show={orderDetailShow}\r\n        onHide={handleOrderDetailClose}\r\n        backdrop=\"static\"\r\n        keyboard={false}\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Chi tiết hoá đơn</Modal.Title>\r\n        </Modal.Header>\r\n        <form onSubmit={formik.handleSubmit}>\r\n          <Modal.Body>\r\n            <div className=\"container mt-4 \" width=\"1000px\">\r\n              <div className=\"card border-primary bt-primary-5\">\r\n                <div className=\"card-header\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col\">\r\n                      <h3 className=\"card-title\">Món ăn</h3>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"card-body\">\r\n                  <div className=\"table-responsive\">\r\n                    <table className=\"table table-bordered table-hover table-striped\">\r\n                      <thead>\r\n                        <tr className=\"table-primary\">\r\n                          <th style={{ width: \"50px\" }}>#</th>\r\n                          <th>Món ăn</th>\r\n                          <th>Số lượng</th>\r\n                          <th>Giá</th>\r\n                          <th>Hoá đơn</th>\r\n                        </tr>\r\n                      </thead>\r\n                      <tbody>\r\n                        {/* {majors.map((major, idx) => {\r\n                    return (\r\n                      <tr key={major.id}>\r\n                        <td>{idx + 1}</td>\r\n                        <td>{major.name}</td>\r\n                        <td>\r\n                          <a\r\n                            href=\"/#\"\r\n                            onClick={(e) => handleModalShow(e, major.id)}\r\n                          >\r\n                            <i className=\"fas fa-edit text-primary\" />\r\n                          </a>\r\n                          <a href=\"/#\" onClick={(e) => deleteRow(e, major.id)}>\r\n                            <i className=\"fas fa-trash-alt text-danger\" />\r\n                          </a>\r\n                        </td>\r\n                      </tr>\r\n                    );\r\n                  })} */}\r\n                        <tr>\r\n                          <td>2</td>\r\n                          <td>Marketing</td>\r\n                          <td>Marketing</td>\r\n                          <td>Marketing</td>\r\n                          <td>Marketing</td>\r\n                        </tr>\r\n                      </tbody>\r\n                    </table>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </Modal.Body>\r\n        </form>\r\n      </Modal>\r\n\r\n      <Modal\r\n        show={modalShow}\r\n        onHide={handleModalClose}\r\n        backdrop=\"static\"\r\n        keyboard={false}\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Món ăn</Modal.Title>\r\n        </Modal.Header>\r\n        <form onSubmit={formik.handleSubmit}>\r\n          <Modal.Body>\r\n            <Input\r\n              id=\"txtCreateDate\"\r\n              type=\"date\"\r\n              lable=\"Ngày tạo\"\r\n              maxLength=\"100\"\r\n              frmField={formik.getFieldProps(\"createDate\")}\r\n              err={formik.touched.createDate && formik.errors.createDate}\r\n              errMessage={formik.errors.createDate}\r\n            ></Input>\r\n            <Input\r\n              id=\"txtOnsale\"\r\n              type=\"number\"\r\n              lable=\"Khuyến mãi\"\r\n              maxLength=\"100\"\r\n              frmField={formik.getFieldProps(\"onsale\")}\r\n              err={formik.touched.onsale && formik.errors.onsale}\r\n              errMessage={formik.errors.onsale}\r\n            ></Input>\r\n            <div className=\"mb-4\">\r\n              <div className=\"form-check\">\r\n                <input\r\n                  className=\"form-check-input\"\r\n                  type=\"radio\"\r\n                  name=\"flexRadioDefault\"\r\n                  id=\"flexRadioDefault1\"\r\n                />\r\n                <label className=\"form-check-label\" htmlFor=\"flexRadioDefault1\">\r\n                  Đã thanh toán\r\n                </label>\r\n              </div>\r\n              <div className=\"form-check\">\r\n                <input\r\n                  className=\"form-check-input\"\r\n                  type=\"radio\"\r\n                  name=\"flexRadioDefault\"\r\n                  id=\"flexRadioDefault2\"\r\n                  defaultChecked\r\n                />\r\n                <label className=\"form-check-label\" htmlFor=\"flexRadioDefault2\">\r\n                  Chưa thanh toán\r\n                </label>\r\n              </div>\r\n            </div>\r\n            <Input\r\n              id=\"txtTotalPrice\"\r\n              type=\"number\"\r\n              lable=\"Tổng tiền\"\r\n              maxLength=\"100\"\r\n              readonly=\"true\"\r\n              frmField={formik.getFieldProps(\"totalPrice\")}\r\n              err={formik.touched.totalPrice && formik.errors.totalPrice}\r\n              errMessage={formik.errors.totalPrice}\r\n            ></Input>\r\n            <select\r\n              className=\"form-control mb-4\"\r\n              id=\"customer\"\r\n              frmField={formik.getFieldProps(\"customer\")}\r\n              err={formik.touched.customer && formik.errors.customer}\r\n              errMessage={formik.errors.customer}\r\n            >\r\n              <option value=\"customer\">Khách hàng</option>\r\n            </select>\r\n            <select\r\n              className=\"form-control mb-4\"\r\n              id=\"staff\"\r\n              frmField={formik.getFieldProps(\"staff\")}\r\n              err={formik.touched.staff && formik.errors.staff}\r\n              errMessage={formik.errors.staff}\r\n            >\r\n              <option value=\"staff\">Nhân viên</option>\r\n            </select>\r\n            <select\r\n              className=\"form-control mb-4\"\r\n              id=\"table\"\r\n              frmField={formik.getFieldProps(\"table\")}\r\n              err={formik.touched.table && formik.errors.table}\r\n              errMessage={formik.errors.table}\r\n            >\r\n              <option value=\"table\">Bàn</option>\r\n            </select>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"secondary\" onClick={handleModalClose}>\r\n              Close\r\n            </Button>\r\n            <Button\r\n              variant=\"primary\"\r\n              type=\"submit\"\r\n              // disabled={!(formik.dirty && formik.isValid)}\r\n            >\r\n              Save\r\n            </Button>\r\n          </Modal.Footer>\r\n        </form>\r\n      </Modal>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Order;\r\n","E:\\isc quang trung\\onJob\\restaurent\\src\\pages\\table.jsx",["145","146"],"import React, { useState, Fragment, useEffect } from \"react\";\r\nimport { Button, Modal } from \"react-bootstrap\";\r\nimport Input from \"../controll/input\";\r\nimport { useFormik, yupToFormErrors } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nconst Table = (props) => {\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      numOfSeats: \"\",\r\n      status: \"\",\r\n      tableNum: \"\",\r\n    },\r\n    validationSchema: Yup.object({\r\n      numOfSeats: Yup.string().required(\"Require\"),\r\n      status: Yup.string().required(\"Require\"),\r\n      tableNum: Yup.string().required(\"Require\"),\r\n    }),\r\n    onSubmit: (values) => {\r\n      handleFormSubmit(values);\r\n    },\r\n  });\r\n\r\n  const [modalShow, setModalShow] = useState(false);\r\n\r\n  const handleModalClose = () => {\r\n    setModalShow(false);\r\n  };\r\n  const handleModalShow = (e, dataId) => {\r\n    if (e) e.preventDefault();\r\n    // setMajorId(dataId);\r\n    // if (dataId > 0) {\r\n    //   majorService.get(dataId).then((res) => {\r\n    //     formik.setValues(res.data);\r\n    setModalShow(true);\r\n    //   });\r\n    // } else {\r\n    //   formik.resetForm();\r\n    //   setModalShow(true);\r\n    // }\r\n  };\r\n\r\n  const handleFormSubmit = (data) => {};\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"container mt-4\">\r\n        <div className=\"card border-primary bt-primary-5\">\r\n          <div className=\"card-header\">\r\n            <div className=\"row\">\r\n              <div className=\"col\">\r\n                <h3 className=\"card-title\">Món ăn</h3>\r\n              </div>\r\n              <div>\r\n                <input\r\n                  placeholder=\"Tìm kiếm theo số bàn\"\r\n                  id=\"txtSearch\"\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                ></input>\r\n              </div>\r\n              <div className=\"col-auto\">\r\n                <button type=\"button\" className=\"btn btn-primary\">\r\n                  <i class=\"fas fa-search\"></i>\r\n                </button>\r\n              </div>\r\n              <div className=\"col-auto\">\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-primary\"\r\n                  data-toggle=\"modal\"\r\n                  onClick={() => handleModalShow(null, 0)}\r\n                >\r\n                  <i className=\"fas fa-plus\" /> Thêm\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"card-body\">\r\n            <div className=\"table-responsive\">\r\n              <table className=\"table table-bordered table-hover table-striped\">\r\n                <thead>\r\n                  <tr className=\"table-primary\">\r\n                    <th style={{ width: \"50px\" }}>#</th>\r\n                    <th>Số bàn</th>\r\n                    <th>Số ghế ngồi</th>\r\n                    <th>Trạng thái</th>\r\n                    <th>Khu vực</th>\r\n                    <th style={{ width: \"80px\" }} />\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {/* {majors.map((major, idx) => {\r\n                    return (\r\n                      <tr key={major.id}>\r\n                        <td>{idx + 1}</td>\r\n                        <td>{major.name}</td>\r\n                        <td>\r\n                          <a\r\n                            href=\"/#\"\r\n                            onClick={(e) => handleModalShow(e, major.id)}\r\n                          >\r\n                            <i className=\"fas fa-edit text-primary\" />\r\n                          </a>\r\n                          <a href=\"/#\" onClick={(e) => deleteRow(e, major.id)}>\r\n                            <i className=\"fas fa-trash-alt text-danger\" />\r\n                          </a>\r\n                        </td>\r\n                      </tr>\r\n                    );\r\n                  })} */}\r\n                  <tr>\r\n                    <td>2</td>\r\n                    <td>Marketing</td>\r\n                    <td>Marketing</td>\r\n                    <td>Marketing</td>\r\n                    <td>Marketing</td>\r\n\r\n                    <td>\r\n                      <a href=\"/#\" onClick={(e) => handleModalShow(e)}>\r\n                        <i className=\"fas fa-edit text-primary\" />\r\n                      </a>\r\n                      <a href=\"/#\">\r\n                        <i className=\"fas fa-trash-alt text-danger ml-2\" />\r\n                      </a>\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <Modal\r\n        show={modalShow}\r\n        onHide={handleModalClose}\r\n        backdrop=\"static\"\r\n        keyboard={false}\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Món ăn</Modal.Title>\r\n        </Modal.Header>\r\n        <form onSubmit={formik.handleSubmit}>\r\n          <Modal.Body>\r\n            <Input\r\n              id=\"txtTableNum\"\r\n              type=\"number\"\r\n              lable=\"Số bàn\"\r\n              maxLength=\"100\"\r\n              frmField={formik.getFieldProps(\"tableNum\")}\r\n              err={formik.touched.tableNum && formik.errors.tableNum}\r\n              errMessage={formik.errors.tableNum}\r\n            ></Input>\r\n            <Input\r\n              id=\"txtNumOfSeats\"\r\n              type=\"number\"\r\n              lable=\"Số ghế ngồi\"\r\n              maxLength=\"100\"\r\n              frmField={formik.getFieldProps(\"numOfSeats\")}\r\n              err={formik.touched.numOfSeats && formik.errors.numOfSeats}\r\n              errMessage={formik.errors.numOfSeats}\r\n            ></Input>\r\n            <Input\r\n              id=\"txtStatus\"\r\n              type=\"text\"\r\n              lable=\"Trạng thái\"\r\n              maxLength=\"100\"\r\n              frmField={formik.getFieldProps(\"status\")}\r\n              err={formik.touched.status && formik.errors.status}\r\n              errMessage={formik.errors.status}\r\n            ></Input>\r\n            <select\r\n              className=\"form-control mb-4\"\r\n              id=\"area\"\r\n              frmField={formik.getFieldProps(\"area\")}\r\n              err={formik.touched.area && formik.errors.area}\r\n              errMessage={formik.errors.area}\r\n            >\r\n              <option value=\"area\">Khu vực</option>\r\n            </select>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"secondary\" onClick={handleModalClose}>\r\n              Close\r\n            </Button>\r\n            <Button\r\n              variant=\"primary\"\r\n              type=\"submit\"\r\n              // disabled={!(formik.dirty && formik.isValid)}\r\n            >\r\n              Save\r\n            </Button>\r\n          </Modal.Footer>\r\n        </form>\r\n      </Modal>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Table;\r\n","E:\\isc quang trung\\onJob\\restaurent\\src\\pages\\staff.jsx",["147","148"],"import React, { useState, Fragment, useEffect } from \"react\";\r\nimport { Button, Modal } from \"react-bootstrap\";\r\nimport Input from \"../controll/input\";\r\nimport { useFormik, yupToFormErrors } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nconst Staff = (props) => {\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      fullName: \"\",\r\n      address: \"\",\r\n      phoneNum: \"\",\r\n      email: \"\",\r\n      gender: \"\",\r\n      role: \"\",\r\n      status: \"\",\r\n    },\r\n    validationSchema: Yup.object({\r\n      fullName: Yup.string().required(\"Require\"),\r\n      address: Yup.string().required(\"Require\"),\r\n      phoneNum: Yup.string().required(\"Require\"),\r\n      email: Yup.string().required(\"Require\").email(),\r\n      gender: Yup.string().required(\"Require\"),\r\n      role: Yup.string().required(\"Require\"),\r\n      status: Yup.string().required(\"Require\"),\r\n    }),\r\n    onSubmit: (values) => {\r\n      handleFormSubmit(values);\r\n    },\r\n  });\r\n\r\n  const [modalShow, setModalShow] = useState(false);\r\n\r\n  const handleModalClose = () => {\r\n    setModalShow(false);\r\n  };\r\n  const handleModalShow = (e, dataId) => {\r\n    if (e) e.preventDefault();\r\n    // setMajorId(dataId);\r\n    // if (dataId > 0) {\r\n    //   majorService.get(dataId).then((res) => {\r\n    //     formik.setValues(res.data);\r\n    setModalShow(true);\r\n    //   });\r\n    // } else {\r\n    //   formik.resetForm();\r\n    //   setModalShow(true);\r\n    // }\r\n  };\r\n\r\n  const handleFormSubmit = (data) => {};\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"container mt-4\">\r\n        <div className=\"card border-primary bt-primary-5\">\r\n          <div className=\"card-header\">\r\n            <div className=\"row\">\r\n              <div className=\"col\">\r\n                <h3 className=\"card-title\">Nhân viên</h3>\r\n              </div>\r\n              <div>\r\n                <input\r\n                  placeholder=\"Tìm kiếm theo tên\"\r\n                  id=\"txtSearch\"\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                ></input>\r\n              </div>\r\n              <div className=\"col-auto\">\r\n                <button type=\"button\" className=\"btn btn-primary\">\r\n                  <i class=\"fas fa-search\"></i>\r\n                </button>\r\n              </div>\r\n              <div className=\"col-auto\">\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-primary\"\r\n                  data-toggle=\"modal\"\r\n                  onClick={() => handleModalShow(null, 0)}\r\n                >\r\n                  <i className=\"fas fa-plus\" /> Thêm\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"card-body\">\r\n            <div className=\"table-responsive\">\r\n              <table className=\"table table-bordered table-hover table-striped\">\r\n                <thead>\r\n                  <tr className=\"table-primary\">\r\n                    <th style={{ width: \"50px\" }}>#</th>\r\n                    <th>Họ tên nhân viên</th>\r\n                    <th>Địa chỉ</th>\r\n                    <th>Giới tính</th>\r\n                    <th>Số điện thoại</th>\r\n                    <th>Email</th>\r\n                    <th>Ảnh</th>\r\n                    <th>Quyền</th>\r\n                    <th>Trạng thái</th>\r\n                    <th style={{ width: \"80px\" }} />\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {/* {majors.map((major, idx) => {\r\n                    return (\r\n                      <tr key={major.id}>\r\n                        <td>{idx + 1}</td>\r\n                        <td>{major.name}</td>\r\n                        <td>\r\n                          <a\r\n                            href=\"/#\"\r\n                            onClick={(e) => handleModalShow(e, major.id)}\r\n                          >\r\n                            <i className=\"fas fa-edit text-primary\" />\r\n                          </a>\r\n                          <a href=\"/#\" onClick={(e) => deleteRow(e, major.id)}>\r\n                            <i className=\"fas fa-trash-alt text-danger\" />\r\n                          </a>\r\n                        </td>\r\n                      </tr>\r\n                    );\r\n                  })} */}\r\n                  <tr>\r\n                    <td>2</td>\r\n                    <td>Marketing</td>\r\n                    <td>Marketing</td>\r\n                    <td>Marketing</td>\r\n                    <td>Marketing</td>\r\n                    <td>Marketing</td>\r\n                    <td>Marketing</td>\r\n                    <td>Marketing</td>\r\n                    <td>Marketing</td>\r\n\r\n                    <td>\r\n                      <a href=\"/#\" onClick={(e) => handleModalShow(e)}>\r\n                        <i className=\"fas fa-edit text-primary\" />\r\n                      </a>\r\n                      <a href=\"/#\">\r\n                        <i className=\"fas fa-trash-alt text-danger ml-2\" />\r\n                      </a>\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <Modal\r\n        show={modalShow}\r\n        onHide={handleModalClose}\r\n        backdrop=\"static\"\r\n        keyboard={false}\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Nhân viên</Modal.Title>\r\n        </Modal.Header>\r\n        <form onSubmit={formik.handleSubmit}>\r\n          <Modal.Body>\r\n            <Input\r\n              id=\"txtFullName\"\r\n              type=\"text\"\r\n              lable=\"Họ tên nhân viên\"\r\n              maxLength=\"100\"\r\n              frmField={formik.getFieldProps(\"fullName\")}\r\n              err={formik.touched.fullName && formik.errors.fullName}\r\n              errMessage={formik.errors.fullName}\r\n            ></Input>\r\n            <Input\r\n              id=\"txtAddress\"\r\n              type=\"text\"\r\n              lable=\"Địa chỉ\"\r\n              maxLength=\"200\"\r\n              frmField={formik.getFieldProps(\"address\")}\r\n              err={formik.touched.address && formik.errors.address}\r\n              errMessage={formik.errors.address}\r\n            ></Input>\r\n            <div className=\"mb-4\">\r\n              <div className=\"form-check\">\r\n                <input\r\n                  className=\"form-check-input\"\r\n                  type=\"radio\"\r\n                  name=\"flexRadioDefault\"\r\n                  id=\"flexRadioDefault1\"\r\n                />\r\n                <label className=\"form-check-label\" htmlFor=\"flexRadioDefault1\">\r\n                  Nam\r\n                </label>\r\n              </div>\r\n              <div className=\"form-check\">\r\n                <input\r\n                  className=\"form-check-input\"\r\n                  type=\"radio\"\r\n                  name=\"flexRadioDefault\"\r\n                  id=\"flexRadioDefault2\"\r\n                  defaultChecked\r\n                />\r\n                <label className=\"form-check-label\" htmlFor=\"flexRadioDefault2\">\r\n                  Nữ\r\n                </label>\r\n              </div>\r\n            </div>\r\n            <Input\r\n              id=\"txtPhoneNum\"\r\n              type=\"number\"\r\n              lable=\"Số điện thoại\"\r\n              maxLength=\"15\"\r\n              frmField={formik.getFieldProps(\"phoneNum\")}\r\n              err={formik.touched.phoneNum && formik.errors.phoneNum}\r\n              errMessage={formik.errors.phoneNum}\r\n            ></Input>\r\n            <Input\r\n              id=\"txtEmail\"\r\n              type=\"text\"\r\n              lable=\"Email\"\r\n              maxLength=\"100\"\r\n              frmField={formik.getFieldProps(\"email\")}\r\n              err={formik.touched.email && formik.errors.email}\r\n              errMessage={formik.errors.email}\r\n            ></Input>\r\n            <Input\r\n              type=\"file\"\r\n              lable=\"Ảnh\"\r\n              id=\"fileAvatar\"\r\n              frmField={formik.getFieldProps(\"avatar\")}\r\n              err={formik.touched.avatar && formik.errors.avatar}\r\n              errMessage={formik.errors.avatar}\r\n            />\r\n            <Input\r\n              id=\"txtRole\"\r\n              type=\"text\"\r\n              lable=\"Quyền\"\r\n              maxLength=\"100\"\r\n              frmField={formik.getFieldProps(\"role\")}\r\n              err={formik.touched.role && formik.errors.role}\r\n              errMessage={formik.errors.role}\r\n            ></Input>\r\n            <select\r\n              className=\"form-control mb-4\"\r\n              id=\"status\"\r\n              frmField={formik.getFieldProps(\"status\")}\r\n              err={formik.touched.status && formik.errors.status}\r\n              errMessage={formik.errors.status}\r\n            >\r\n              <option value=\"status\">Trạng thái</option>\r\n            </select>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"secondary\" onClick={handleModalClose}>\r\n              Close\r\n            </Button>\r\n            <Button\r\n              variant=\"primary\"\r\n              type=\"submit\"\r\n              // disabled={!(formik.dirty && formik.isValid)}\r\n            >\r\n              Save\r\n            </Button>\r\n          </Modal.Footer>\r\n        </form>\r\n      </Modal>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Staff;\r\n","E:\\isc quang trung\\onJob\\restaurent\\src\\pages\\ingredient.jsx",["149","150"],"import React, { useState, Fragment, useEffect } from \"react\";\r\nimport { Button, Modal } from \"react-bootstrap\";\r\nimport Input from \"../controll/input\";\r\nimport { useFormik, yupToFormErrors } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nconst Ingredient = (props) => {\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      ingName: \"\",\r\n      ingPrice: \"\",\r\n      quantity: \"\",\r\n      unit: \"\",\r\n      ingCategory: \"\",\r\n    },\r\n    validationSchema: Yup.object({\r\n      ingName: Yup.string().required(\"Require\"),\r\n      ingPrice: Yup.string().required(\"Require\"),\r\n      quantity: Yup.string().required(\"Require\"),\r\n      unit: Yup.string().required(\"Require\"),\r\n      ingCategory: Yup.string(\"Loại nguyên liệu\").required(\"Require\"),\r\n    }),\r\n    onSubmit: (values) => {\r\n      handleFormSubmit(values);\r\n    },\r\n  });\r\n\r\n  const [modalShow, setModalShow] = useState(false);\r\n\r\n  const handleModalClose = () => {\r\n    setModalShow(false);\r\n  };\r\n  const handleModalShow = (e, dataId) => {\r\n    if (e) e.preventDefault();\r\n    // setMajorId(dataId);\r\n    // if (dataId > 0) {\r\n    //   majorService.get(dataId).then((res) => {\r\n    //     formik.setValues(res.data);\r\n    setModalShow(true);\r\n    //   });\r\n    // } else {\r\n    //   formik.resetForm();\r\n    //   setModalShow(true);\r\n    // }\r\n  };\r\n\r\n  const handleFormSubmit = (data) => {};\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"container mt-4\">\r\n        <div className=\"card border-primary bt-primary-5\">\r\n          <div className=\"card-header\">\r\n            <div className=\"row\">\r\n              <div className=\"col\">\r\n                <h3 className=\"card-title\">Nguyên liệu</h3>\r\n              </div>\r\n              <div>\r\n                <input\r\n                  placeholder=\"Tìm kiếm theo tên\"\r\n                  id=\"txtSearch\"\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                ></input>\r\n              </div>\r\n              <div className=\"col-auto\">\r\n                <button type=\"button\" className=\"btn btn-primary\">\r\n                  <i class=\"fas fa-search\"></i>\r\n                </button>\r\n              </div>\r\n              <div className=\"col-auto\">\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-primary\"\r\n                  data-toggle=\"modal\"\r\n                  onClick={() => handleModalShow(null, 0)}\r\n                >\r\n                  <i className=\"fas fa-plus\" /> Thêm\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"card-body\">\r\n            <div className=\"table-responsive\">\r\n              <table className=\"table table-bordered table-hover table-striped\">\r\n                <thead>\r\n                  <tr className=\"table-primary\">\r\n                    <th style={{ width: \"50px\" }}>#</th>\r\n                    <th>Tên nguyên liệu</th>\r\n                    <th>Giá</th>\r\n                    <th>Số lượng</th>\r\n                    <th>Đơn vị tính</th>\r\n                    <th>Loại nguyên liệu</th>\r\n                    <th style={{ width: \"80px\" }} />\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {/* {majors.map((major, idx) => {\r\n                    return (\r\n                      <tr key={major.id}>\r\n                        <td>{idx + 1}</td>\r\n                        <td>{major.name}</td>\r\n                        <td>\r\n                          <a\r\n                            href=\"/#\"\r\n                            onClick={(e) => handleModalShow(e, major.id)}\r\n                          >\r\n                            <i className=\"fas fa-edit text-primary\" />\r\n                          </a>\r\n                          <a href=\"/#\" onClick={(e) => deleteRow(e, major.id)}>\r\n                            <i className=\"fas fa-trash-alt text-danger\" />\r\n                          </a>\r\n                        </td>\r\n                      </tr>\r\n                    );\r\n                  })} */}\r\n                  <tr>\r\n                    <td>2</td>\r\n                    <td>Marketing</td>\r\n                    <td>Marketing</td>\r\n                    <td>Marketing</td>\r\n                    <td>Marketing</td>\r\n                    <td>Marketing</td>\r\n\r\n                    <td>\r\n                      <a href=\"/#\" onClick={(e) => handleModalShow(e)}>\r\n                        <i className=\"fas fa-edit text-primary\" />\r\n                      </a>\r\n                      <a href=\"/#\">\r\n                        <i className=\"fas fa-trash-alt text-danger ml-2\" />\r\n                      </a>\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <Modal\r\n        show={modalShow}\r\n        onHide={handleModalClose}\r\n        backdrop=\"static\"\r\n        keyboard={false}\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Món ăn</Modal.Title>\r\n        </Modal.Header>\r\n        <form onSubmit={formik.handleSubmit}>\r\n          <Modal.Body>\r\n            <Input\r\n              id=\"txtIngName\"\r\n              type=\"text\"\r\n              lable=\"Tên nguyên liệu\"\r\n              maxLength=\"100\"\r\n              frmField={formik.getFieldProps(\"ingName\")}\r\n              err={formik.touched.ingName && formik.errors.ingName}\r\n              errMessage={formik.errors.ingName}\r\n            ></Input>\r\n            <Input\r\n              id=\"txtIngPrice\"\r\n              type=\"number\"\r\n              lable=\"Giá\"\r\n              maxLength=\"100\"\r\n              frmField={formik.getFieldProps(\"ingPrice\")}\r\n              err={formik.touched.ingPrice && formik.errors.ingPrice}\r\n              errMessage={formik.errors.ingPrice}\r\n            ></Input>\r\n            <Input\r\n              id=\"txtQuantity\"\r\n              type=\"number\"\r\n              lable=\"Số lượng\"\r\n              maxLength=\"100\"\r\n              frmField={formik.getFieldProps(\"quantity\")}\r\n              err={formik.touched.quantity && formik.errors.quantity}\r\n              errMessage={formik.errors.quantity}\r\n            ></Input>\r\n            <Input\r\n              id=\"txtUnit\"\r\n              type=\"text\"\r\n              lable=\"Đơn vị tính\"\r\n              maxLength=\"100\"\r\n              frmField={formik.getFieldProps(\"unit\")}\r\n              err={formik.touched.unit && formik.errors.unit}\r\n              errMessage={formik.errors.unit}\r\n            ></Input>\r\n            <select\r\n              className=\"form-control mb-4\"\r\n              id=\"ingCategory\"\r\n              frmField={formik.getFieldProps(\"ingCategory\")}\r\n              err={formik.touched.ingCategory && formik.errors.ingCategory}\r\n              errMessage={formik.errors.ingCategory}\r\n            >\r\n              <option value=\"ingCategory\">Loại nguyên liệu</option>\r\n            </select>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"secondary\" onClick={handleModalClose}>\r\n              Close\r\n            </Button>\r\n            <Button\r\n              variant=\"primary\"\r\n              type=\"submit\"\r\n              // disabled={!(formik.dirty && formik.isValid)}\r\n            >\r\n              Save\r\n            </Button>\r\n          </Modal.Footer>\r\n        </form>\r\n      </Modal>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Ingredient;\r\n","E:\\isc quang trung\\onJob\\restaurent\\src\\pages\\ingredientCategory.jsx",["151","152"],"import React, { useState, Fragment, useEffect } from \"react\";\r\nimport { Button, Modal } from \"react-bootstrap\";\r\nimport Input from \"../controll/input\";\r\nimport { useFormik, yupToFormErrors } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nconst IngredientCategory = (props) => {\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      ingCategoryName: \"\",\r\n    },\r\n    validationSchema: Yup.object({\r\n      ingCategoryName: Yup.string().required(\"Require\"),\r\n    }),\r\n    onSubmit: (values) => {\r\n      handleFormSubmit(values);\r\n    },\r\n  });\r\n\r\n  const [modalShow, setModalShow] = useState(false);\r\n\r\n  const handleModalClose = () => {\r\n    setModalShow(false);\r\n  };\r\n  const handleModalShow = (e, dataId) => {\r\n    if (e) e.preventDefault();\r\n    // setMajorId(dataId);\r\n    // if (dataId > 0) {\r\n    //   majorService.get(dataId).then((res) => {\r\n    //     formik.setValues(res.data);\r\n    setModalShow(true);\r\n    //   });\r\n    // } else {\r\n    //   formik.resetForm();\r\n    //   setModalShow(true);\r\n    // }\r\n  };\r\n\r\n  const handleFormSubmit = (data) => {};\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"container mt-4\">\r\n        <div className=\"card border-primary bt-primary-5\">\r\n          <div className=\"card-header\">\r\n            <div className=\"row\">\r\n              <div className=\"col\">\r\n                <h3 className=\"card-title\">Loại nguyên liệu</h3>\r\n              </div>\r\n              <div>\r\n                <input\r\n                  placeholder=\"Tìm kiếm theo tên\"\r\n                  id=\"txtSearch\"\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                ></input>\r\n              </div>\r\n              <div className=\"col-auto\">\r\n                <button type=\"button\" className=\"btn btn-primary\">\r\n                  <i class=\"fas fa-search\"></i>\r\n                </button>\r\n              </div>\r\n              <div className=\"col-auto\">\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-primary\"\r\n                  data-toggle=\"modal\"\r\n                  onClick={() => handleModalShow(null, 0)}\r\n                >\r\n                  <i className=\"fas fa-plus\" /> Thêm\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"card-body\">\r\n            <div className=\"table-responsive\">\r\n              <table className=\"table table-bordered table-hover table-striped\">\r\n                <thead>\r\n                  <tr className=\"table-primary\">\r\n                    <th style={{ width: \"50px\" }}>#</th>\r\n                    <th>Tên loại nguyên liệu</th>\r\n                    <th style={{ width: \"80px\" }} />\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {/* {majors.map((major, idx) => {\r\n                    return (\r\n                      <tr key={major.id}>\r\n                        <td>{idx + 1}</td>\r\n                        <td>{major.name}</td>\r\n                        <td>\r\n                          <a\r\n                            href=\"/#\"\r\n                            onClick={(e) => handleModalShow(e, major.id)}\r\n                          >\r\n                            <i className=\"fas fa-edit text-primary\" />\r\n                          </a>\r\n                          <a href=\"/#\" onClick={(e) => deleteRow(e, major.id)}>\r\n                            <i className=\"fas fa-trash-alt text-danger\" />\r\n                          </a>\r\n                        </td>\r\n                      </tr>\r\n                    );\r\n                  })} */}\r\n                  <tr>\r\n                    <td>2</td>\r\n                    <td>Marketing</td>\r\n\r\n                    <td>\r\n                      <a href=\"/#\" onClick={(e) => handleModalShow(e)}>\r\n                        <i className=\"fas fa-edit text-primary\" />\r\n                      </a>\r\n                      <a href=\"/#\">\r\n                        <i className=\"fas fa-trash-alt text-danger ml-2\" />\r\n                      </a>\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <Modal\r\n        show={modalShow}\r\n        onHide={handleModalClose}\r\n        backdrop=\"static\"\r\n        keyboard={false}\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Loại nguyên liệu</Modal.Title>\r\n        </Modal.Header>\r\n        <form onSubmit={formik.handleSubmit}>\r\n          <Modal.Body>\r\n            <Input\r\n              id=\"txtIngCategoryName\"\r\n              type=\"text\"\r\n              lable=\"Tên loại nguyên liệu\"\r\n              maxLength=\"100\"\r\n              frmField={formik.getFieldProps(\"ingCategoryName\")}\r\n              err={\r\n                formik.touched.ingCategoryName && formik.errors.ingCategoryName\r\n              }\r\n              errMessage={formik.errors.ingCategoryName}\r\n            ></Input>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"secondary\" onClick={handleModalClose}>\r\n              Close\r\n            </Button>\r\n            <Button\r\n              variant=\"primary\"\r\n              type=\"submit\"\r\n              // disabled={!(formik.dirty && formik.isValid)}\r\n            >\r\n              Save\r\n            </Button>\r\n          </Modal.Footer>\r\n        </form>\r\n      </Modal>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default IngredientCategory;\r\n","E:\\isc quang trung\\onJob\\restaurent\\src\\pages\\area.jsx",["153","154"],"import React, { useState, Fragment, useEffect } from \"react\";\r\nimport { Button, Modal } from \"react-bootstrap\";\r\nimport Input from \"../controll/input\";\r\nimport { useFormik, yupToFormErrors } from \"formik\";\r\nimport * as Yup from \"yup\";\r\n\r\nconst Area = (props) => {\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      area: \"\",\r\n    },\r\n    validationSchema: Yup.object({\r\n      area: Yup.string().required(\"Require\"),\r\n    }),\r\n    onSubmit: (values) => {\r\n      handleFormSubmit(values);\r\n    },\r\n  });\r\n\r\n  const [modalShow, setModalShow] = useState(false);\r\n\r\n  const handleModalClose = () => {\r\n    setModalShow(false);\r\n  };\r\n  const handleModalShow = (e, dataId) => {\r\n    if (e) e.preventDefault();\r\n    // setMajorId(dataId);\r\n    // if (dataId > 0) {\r\n    //   majorService.get(dataId).then((res) => {\r\n    //     formik.setValues(res.data);\r\n    setModalShow(true);\r\n    //   });\r\n    // } else {\r\n    //   formik.resetForm();\r\n    //   setModalShow(true);\r\n    // }\r\n  };\r\n\r\n  const handleFormSubmit = (data) => {};\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"container mt-4\">\r\n        <div className=\"card border-primary bt-primary-5\">\r\n          <div className=\"card-header\">\r\n            <div className=\"row\">\r\n              <div className=\"col\">\r\n                <h3 className=\"card-title\">Khu vực</h3>\r\n              </div>\r\n              <div>\r\n                <input\r\n                  placeholder=\"Tìm kiếm theo tên\"\r\n                  id=\"txtSearch\"\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                ></input>\r\n              </div>\r\n              <div className=\"col-auto\">\r\n                <button type=\"button\" className=\"btn btn-primary\">\r\n                  <i class=\"fas fa-search\"></i>\r\n                </button>\r\n              </div>\r\n              <div className=\"col-auto\">\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-primary\"\r\n                  data-toggle=\"modal\"\r\n                  onClick={() => handleModalShow(null, 0)}\r\n                >\r\n                  <i className=\"fas fa-plus\" /> Thêm\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"card-body\">\r\n            <div className=\"table-responsive\">\r\n              <table className=\"table table-bordered table-hover table-striped\">\r\n                <thead>\r\n                  <tr className=\"table-primary\">\r\n                    <th style={{ width: \"50px\" }}>#</th>\r\n                    <th>Tên khu vực</th>\r\n                    <th style={{ width: \"80px\" }} />\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {/* {majors.map((major, idx) => {\r\n                    return (\r\n                      <tr key={major.id}>\r\n                        <td>{idx + 1}</td>\r\n                        <td>{major.name}</td>\r\n                        <td>\r\n                          <a\r\n                            href=\"/#\"\r\n                            onClick={(e) => handleModalShow(e, major.id)}\r\n                          >\r\n                            <i className=\"fas fa-edit text-primary\" />\r\n                          </a>\r\n                          <a href=\"/#\" onClick={(e) => deleteRow(e, major.id)}>\r\n                            <i className=\"fas fa-trash-alt text-danger\" />\r\n                          </a>\r\n                        </td>\r\n                      </tr>\r\n                    );\r\n                  })} */}\r\n                  <tr>\r\n                    <td>2</td>\r\n                    <td>Marketing</td>\r\n\r\n                    <td>\r\n                      <a href=\"/#\" onClick={(e) => handleModalShow(e)}>\r\n                        <i className=\"fas fa-edit text-primary\" />\r\n                      </a>\r\n                      <a href=\"/#\">\r\n                        <i className=\"fas fa-trash-alt text-danger ml-2\" />\r\n                      </a>\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <Modal\r\n        show={modalShow}\r\n        onHide={handleModalClose}\r\n        backdrop=\"static\"\r\n        keyboard={false}\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Khu vực</Modal.Title>\r\n        </Modal.Header>\r\n        <form onSubmit={formik.handleSubmit}>\r\n          <Modal.Body>\r\n            <Input\r\n              id=\"txtArea\"\r\n              type=\"text\"\r\n              lable=\"Tên khu vực\"\r\n              maxLength=\"100\"\r\n              frmField={formik.getFieldProps(\"area\")}\r\n              err={formik.touched.area && formik.errors.area}\r\n              errMessage={formik.errors.area}\r\n            ></Input>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"secondary\" onClick={handleModalClose}>\r\n              Close\r\n            </Button>\r\n            <Button\r\n              variant=\"primary\"\r\n              type=\"submit\"\r\n              // disabled={!(formik.dirty && formik.isValid)}\r\n            >\r\n              Save\r\n            </Button>\r\n          </Modal.Footer>\r\n        </form>\r\n      </Modal>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Area;\r\n","E:\\isc quang trung\\onJob\\restaurent\\src\\pages\\revenue.jsx",[],{"ruleId":"155","severity":1,"message":"156","line":8,"column":8,"nodeType":"157","messageId":"158","endLine":8,"endColumn":9},{"ruleId":"155","severity":1,"message":"159","line":9,"column":8,"nodeType":"157","messageId":"158","endLine":9,"endColumn":14},{"ruleId":"160","replacedBy":"161"},{"ruleId":"162","replacedBy":"163"},{"ruleId":"155","severity":1,"message":"164","line":1,"column":8,"nodeType":"157","messageId":"158","endLine":1,"endColumn":12},{"ruleId":"160","replacedBy":"165"},{"ruleId":"162","replacedBy":"166"},{"ruleId":"155","severity":1,"message":"167","line":3,"column":8,"nodeType":"157","messageId":"158","endLine":3,"endColumn":12},{"ruleId":"155","severity":1,"message":"168","line":1,"column":10,"nodeType":"157","messageId":"158","endLine":1,"endColumn":19},{"ruleId":"155","severity":1,"message":"169","line":4,"column":10,"nodeType":"157","messageId":"158","endLine":4,"endColumn":14},{"ruleId":"170","severity":1,"message":"171","line":86,"column":15,"nodeType":"172","endLine":94,"endColumn":16},{"ruleId":"170","severity":1,"message":"171","line":120,"column":15,"nodeType":"172","endLine":128,"endColumn":16},{"ruleId":"170","severity":1,"message":"171","line":137,"column":17,"nodeType":"172","endLine":137,"endColumn":81},{"ruleId":"170","severity":1,"message":"171","line":150,"column":17,"nodeType":"172","endLine":150,"endColumn":81},{"ruleId":"170","severity":1,"message":"171","line":161,"column":17,"nodeType":"172","endLine":161,"endColumn":81},{"ruleId":"170","severity":1,"message":"171","line":173,"column":17,"nodeType":"172","endLine":176,"endColumn":18},{"ruleId":"170","severity":1,"message":"171","line":182,"column":15,"nodeType":"172","endLine":190,"endColumn":16},{"ruleId":"170","severity":1,"message":"171","line":199,"column":17,"nodeType":"172","endLine":199,"endColumn":81},{"ruleId":"170","severity":1,"message":"171","line":218,"column":17,"nodeType":"172","endLine":218,"endColumn":81},{"ruleId":"170","severity":1,"message":"171","line":235,"column":17,"nodeType":"172","endLine":235,"endColumn":81},{"ruleId":"170","severity":1,"message":"171","line":254,"column":17,"nodeType":"172","endLine":254,"endColumn":81},{"ruleId":"170","severity":1,"message":"171","line":274,"column":17,"nodeType":"172","endLine":277,"endColumn":18},{"ruleId":"170","severity":1,"message":"171","line":284,"column":15,"nodeType":"172","endLine":292,"endColumn":16},{"ruleId":"173","severity":1,"message":"174","line":296,"column":17,"nodeType":"172","endLine":299,"endColumn":19},{"ruleId":"170","severity":1,"message":"171","line":305,"column":17,"nodeType":"172","endLine":305,"endColumn":55},{"ruleId":"170","severity":1,"message":"171","line":309,"column":17,"nodeType":"172","endLine":309,"endColumn":55},{"ruleId":"170","severity":1,"message":"171","line":313,"column":17,"nodeType":"172","endLine":313,"endColumn":55},{"ruleId":"170","severity":1,"message":"171","line":318,"column":17,"nodeType":"172","endLine":323,"endColumn":18},{"ruleId":"155","severity":1,"message":"175","line":1,"column":37,"nodeType":"157","messageId":"158","endLine":1,"endColumn":46},{"ruleId":"155","severity":1,"message":"176","line":4,"column":21,"nodeType":"157","messageId":"158","endLine":4,"endColumn":36},{"ruleId":"155","severity":1,"message":"175","line":1,"column":37,"nodeType":"157","messageId":"158","endLine":1,"endColumn":46},{"ruleId":"155","severity":1,"message":"176","line":4,"column":21,"nodeType":"157","messageId":"158","endLine":4,"endColumn":36},{"ruleId":"155","severity":1,"message":"175","line":1,"column":37,"nodeType":"157","messageId":"158","endLine":1,"endColumn":46},{"ruleId":"155","severity":1,"message":"176","line":4,"column":21,"nodeType":"157","messageId":"158","endLine":4,"endColumn":36},{"ruleId":"155","severity":1,"message":"175","line":1,"column":37,"nodeType":"157","messageId":"158","endLine":1,"endColumn":46},{"ruleId":"155","severity":1,"message":"176","line":4,"column":21,"nodeType":"157","messageId":"158","endLine":4,"endColumn":36},{"ruleId":"155","severity":1,"message":"175","line":1,"column":37,"nodeType":"157","messageId":"158","endLine":1,"endColumn":46},{"ruleId":"155","severity":1,"message":"176","line":4,"column":21,"nodeType":"157","messageId":"158","endLine":4,"endColumn":36},{"ruleId":"155","severity":1,"message":"177","line":62,"column":9,"nodeType":"157","messageId":"158","endLine":62,"endColumn":32},{"ruleId":"155","severity":1,"message":"175","line":1,"column":37,"nodeType":"157","messageId":"158","endLine":1,"endColumn":46},{"ruleId":"155","severity":1,"message":"176","line":4,"column":21,"nodeType":"157","messageId":"158","endLine":4,"endColumn":36},{"ruleId":"155","severity":1,"message":"175","line":1,"column":37,"nodeType":"157","messageId":"158","endLine":1,"endColumn":46},{"ruleId":"155","severity":1,"message":"176","line":4,"column":21,"nodeType":"157","messageId":"158","endLine":4,"endColumn":36},{"ruleId":"155","severity":1,"message":"175","line":1,"column":37,"nodeType":"157","messageId":"158","endLine":1,"endColumn":46},{"ruleId":"155","severity":1,"message":"176","line":4,"column":21,"nodeType":"157","messageId":"158","endLine":4,"endColumn":36},{"ruleId":"155","severity":1,"message":"175","line":1,"column":37,"nodeType":"157","messageId":"158","endLine":1,"endColumn":46},{"ruleId":"155","severity":1,"message":"176","line":4,"column":21,"nodeType":"157","messageId":"158","endLine":4,"endColumn":36},{"ruleId":"155","severity":1,"message":"175","line":1,"column":37,"nodeType":"157","messageId":"158","endLine":1,"endColumn":46},{"ruleId":"155","severity":1,"message":"176","line":4,"column":21,"nodeType":"157","messageId":"158","endLine":4,"endColumn":36},"no-unused-vars","'$' is defined but never used.","Identifier","unusedVar","'Popper' is defined but never used.","no-native-reassign",["178"],"no-negated-in-lhs",["179"],"'logo' is defined but never used.",["178"],["179"],"'Home' is defined but never used.","'Callbacks' is defined but never used.","'Link' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'useEffect' is defined but never used.","'yupToFormErrors' is defined but never used.","'handleOrderDetailSubmit' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]